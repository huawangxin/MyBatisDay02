<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd     
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<context:component-scan 
		base-package="com.huawangxin"/>
	
	<util:properties id="jdbc" 
		location="classpath:jdbc.properties"/>
	
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" 
			value="#{jdbc.driver}"/>
		<property name="jdbcUrl" 
			value="#{jdbc.url}"/>
		<property name="user" 
			value="#{jdbc.user}"/>
		<property name="password"
			value="#{jdbc.pwd}"/>
		<property name="initialPoolSize"
			value="#{jdbc.init}"/>
		<property name="minPoolSize"
			value="#{jdbc.min}"/>
		<property name="maxPoolSize"
			value="#{jdbc.max}"/> 
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations"
			value="com/huawangxin/entity/*.xml"/> 
	</bean>	
	<!-- 虽然配置的类型MapperFactoryBean 但是在Spring
	在执行期间, 创建对象时候或调用 XXXXFactoryBean
	的创建对象的方法 来创建对象, 创建对象的类型是有
	变化的 并不是 MapperFactoryBean 类型, 而是
	MapperFactoryBean 创建的对象类型 
	ctx.getBean("deptMapper")-> 对象的类型
	-->
	<!-- 
	<bean id="deptMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" 
			ref="sqlSessionFactory"/>
		<property name="mapperInterface"
			value="com.huawangxin.entity.DeptMapper"/>
	</bean>
	
	<bean id="userMapper"></bean>
	<bean id="empMapper"></bean>
	 -->
	<!-- MapperScannerConfigurer 
	Bean会扫描com.huawangxin包中的全部Mapper接口，
	自动创建Mapper Bean对象，BeanID采用默认规则 -->
	<!-- 对包中满足条件的Mapper类进行加载
	@Mapper 注解的Mapper接口进行加载 -->
	<!-- <bean id="scanner"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="basePackage"
			value="com.huawangxin"/>
		<property name="annotationClass"
			value="com.huawangxin.annototion.Mapper"/>
	</bean> -->
	<!-- 必须利用构造器参数注入sqlSessionFactory  -->
 	<bean id="sqlSessionTemplate" 
 		class="org.mybatis.spring.SqlSessionTemplate">
 		<constructor-arg 
 			index="0" ref="sqlSessionFactory"/>
 	</bean>
</beans>
